name: PreRelease
on:
  push:
    branches:
      - alpha

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions: {}

jobs:
  release:
    # prevents this action from running on forks
    if: github.repository == 'riskers/fe-bootstrap-template'

    permissions:
      contents: write # to create release
      issues: write # to post issue comments
      pull-requests: write # to create pull request

    name: prerelease
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: ./.github/actions/ci-setup

      - name: Build
        # you can use filter command also
        # run: pnpm -F "@riskers12/**" --workspace-concurrency=1 exec -- npx --no-install semantic-release -e semantic-release-monorepo
        run: pnpm run -r build

      - name: Creating .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Enter pre Mode
      #   run: pnpm changeset pre enter alpha

      - name: Bump Package Versions
        id: changesets
        run: |
          pnpm exec changeset version --snapshot alpha > changesets.output.txt 2>&1
          echo ::set-output name=result::`cat changesets.output.txt`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Release
        id: publish
        run: |
          pnpm changeset publish --tag alpha > publish.output.txt 2>&1
          echo ::set-output name=result::`cat publish.output.txt`
        env:
          # Needs access to publish to npm
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}



      # - name: Create Release Pull Request or Publish to npm
      #   uses: changesets/action@v1
      #   with:
      #     version: pnpm changeset version --snapshot alpha
      #     publish: pnpm changeset publish --tag alpha --no-git-tag
      #     commit: 'chore: [ci] release'
      #     title: 'chore: [ci] release'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Exit pre
      #   run: pnpm changeset pre exit

      # - name: Create Release Pull Request
      #   uses: changesets/action@v1
      #   with:
      #     version: pnpm changeset version
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Publish to npm
      #   id: changesets
      #   uses: changesets/action@v1
      #   with:
      #     publish: pnpm changeset publish
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}


      # - name: Create Release Pull Request
      #   id: changesets
      #   uses: changesets/action@v1
      #   with:
      #     publish: pnpm publish -r
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # PNPM blog
      # - name: create and publish versions
      #   uses: changesets/action@master
      #   with:
      #     version: pnpm ci:version
      #     commit: "chore: update versions"
      #     title: "chore: update versions"
      #     publish: pnpm ci:publish
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/pmowrer/semantic-release-monorepo/issues/130
      # find . -type f -name package.json -exec sed -i 's/workspace://g' '{}' \;
      # - name: Release
      #   run: |
      #     pnpm -F "@riskers12/**" --workspace-concurrency=1 exec -- npx --no-install semantic-release -e semantic-release-monorepo
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
